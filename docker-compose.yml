version: '3.8'

services:
  postgres-sql-ph:
    image: postgres:17.3
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    volumes:
      - postgres-data:/var/lib/postgresql/data
    ports:
      - "5434:5432"
    networks:
      - spring-ph
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 10
    restart: unless-stopped

  ph-api:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: ph-api
    platform: linux/arm64
    ports:
      - "8087:8080"
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres-sql-ph:5432/${POSTGRES_DB}
      SPRING_DATASOURCE_USERNAME: ${POSTGRES_USER}
      SPRING_DATASOURCE_PASSWORD: ${POSTGRES_PASSWORD}
      JWT_SECRET: ${JWT_SECRET}
      JWT_ACCESS: ${JWT_ACCESS}
      JWT_REFRESH: ${JWT_REFRESH}
      MAIL_USERNAME: ${MAIL_USERNAME}
      MAIL_PASSWORD: ${MAIL_PASSWORD}
      YAGPT_KEY: ${YAGPT_KEY}
      YAGPT_FOLDER: ${YAGPT_FOLDER}
      YAGPT_MODEL: ${YAGPT_MODEL}
    depends_on:
      postgres:
        condition: service_healthy
    restart: unless-stopped

volumes:
  postgres-data:
