name: PocketHealth Backend API Pipeline

on:
  pull_request:
    branches:
      - '*'
  push:
    branches:
      - 'main'

env:
  VERSION: 1.0.0
  IMAGE_NAME: ph/ph

jobs:
  compile:
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup JDK
        uses: actions/setup-java@v3
        with:
          java-version: 17
          distribution: 'corretto'

      - name: Setup Maven
        run: |
          sudo apt-get update
          sudo apt-get install -y maven

      - name: Check Maven and Java versions
        run: |
          mvn -v
          java -version

      - name: Make mvnw executable
        run: chmod +x ./mvnw

      - name: Clean Maven local repository
        run: mvn clean install -U

      - name: Compile project
        run: mvn clean compile -DskipTests

  build:
    runs-on: ubuntu-22.04
    needs: compile
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup JDK
        uses: actions/setup-java@v3
        with:
          java-version: 17
          distribution: 'corretto'

      - name: Setup Maven
        run: |
          sudo apt-get update
          sudo apt-get install -y maven

      - name: Make mvnw executable
        run: chmod +x ./mvnw

      - name: Build project
        run: mvn clean package -DskipTests

  build-image:
    runs-on: ubuntu-22.04
    needs: build
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup JDK
        uses: actions/setup-java@v3
        with:
          java-version: 17
          distribution: 'corretto'

      - name: Login to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
        with:
          platforms: arm64

      - name: Build & Push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: Dockerfile
          push: true
          platforms: linux/arm64
          tags: ${{ env.IMAGE_NAME }}:${{ env.VERSION }}
          build-args: |
            APP_VERSION=${{ env.VERSION }}

  deploy:
    runs-on: ubuntu-22.04
    needs: build-image
    steps:
      - name: Create deployment folder
        run: ssh -p 2222 ${{ secrets.VPS_USERNAME }}@${{ secrets.VPS_IP }} "mkdir -p ci-cd"

      - name: Copy docker-compose file
        run: scp docker-compose.yml ${{ secrets.VPS_USERNAME }}@${{ secrets.VPS_IP }}:ci-cd/docker-compose.yml

      - name: Deploy
        run: |
          ssh -p 2222 ${{ secrets.VPS_USERNAME }}@${{ secrets.VPS_IP }} <<EOF
          cd ci-cd
          docker-compose -f docker-compose.yml pull -q
          docker-compose -f docker-compose down
          docker-compose -f docker-compose.yml up -d
          EOF
