name: PocketHealth Backend API Pipeline

on:
  pull_request:
    branches:
      - '*'
  push:
    branches:
      - 'main'

env:
  VERSION: 1.0.0
  IMAGE_NAME: ph/ph

jobs:
  compile:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup JDK
        uses: actions/setup-java@v3
        with:
          java-version: 17
          distribution: 'corretto'

      - name: Setup Maven
        run: |
          sudo apt-get update
          sudo apt-get install -y maven

      - name: Check Maven and Java versions
        run: |
          mvn -v
          java -version

      - name: Make mvnw executable
        run: chmod +x ./mvnw

      - name: Clean Maven local repository
        run: mvn clean install -U -DskipTests

      - name: Compile project
        run: ./mvnw clean compile -DskipTests

  build:
    runs-on: ubuntu-latest
    needs: compile
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup JDK
        uses: actions/setup-java@v3
        with:
          java-version: 17
          distribution: 'corretto'

      - name: Setup Maven
        run: |
          sudo apt-get update
          sudo apt-get install -y maven

      - name: Make mvnw executable
        run: chmod +x ./mvnw

      - name: Build project
        run: ./mvnw clean package -DskipTests

  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up SSH
        uses: webfactory/ssh-agent@v0.7.0
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

      - name: Install sshpass
        run: sudo apt-get update && sudo apt-get install -y sshpass

      - name: Deploy to server
        run: |
          sshpass -p "${{ secrets.VPS_PASSWORD }}" ssh -o StrictHostKeyChecking=no -p 2222 ${{ secrets.VPS_USERNAME }}@${{ secrets.VPS_IP }} << 'EOF'
            cd ~/PocketHealth/backend
            git pull origin main
            docker compose down
            docker compose up -d --build
          EOF
      
